// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditViewModel addNewRepertoireTag should invoke the addRepertoireTag mutation 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "blackRepertoire": Repertoire {
          "AddFromGame": [MockFunction],
          "AddMove": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveMove": [MockFunction],
          "RemoveRepertoireTag": [MockFunction],
          "positions": Array [],
          "tags": Array [],
        },
        "whiteRepertoire": Repertoire {
          "AddFromGame": [MockFunction],
          "AddMove": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveMove": [MockFunction],
          "RemoveRepertoireTag": [MockFunction],
          "positions": Array [],
          "tags": Array [
            RepertoireTag {
              "AddChild": [MockFunction],
              "AsSaved": [MockFunction],
              "RemoveChild": [MockFunction],
              "children": Array [],
              "fen": "",
              "forSide": 0,
              "id": "",
              "name": "",
              "position": RepertoirePosition {
                "AddChild": [MockFunction],
                "AddTrainingEvent": [MockFunction],
                "AsPgn": [MockFunction],
                "AsPgnMoveText": [MockFunction],
                "AsSaved": [MockFunction],
                "GetTurnLists": [MockFunction],
                "IncludeForTrainingMode": [MockFunction],
                "IsChildPosition": [MockFunction],
                "RootPaths": [MockFunction],
                "SideToMove": [MockFunction],
                "Unlink": [MockFunction],
                "VisitChildren": [MockFunction],
                "children": Array [],
                "comment": "",
                "easinessFactor": 0,
                "fen": "",
                "forSide": 0,
                "intervalIndex": 0,
                "myTurn": false,
                "nextRepetitionTimestamp": 0,
                "parents": Array [],
                "previousIntervalDays": 0,
                "trainingHistory": Array [],
              },
            },
          ],
        },
      },
      Object {
        "parent": RepertoireTag {
          "AddChild": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveChild": [MockFunction],
          "children": Array [],
          "fen": "",
          "forSide": 0,
          "id": "",
          "name": "",
          "position": RepertoirePosition {
            "AddChild": [MockFunction],
            "AddTrainingEvent": [MockFunction],
            "AsPgn": [MockFunction],
            "AsPgnMoveText": [MockFunction],
            "AsSaved": [MockFunction],
            "GetTurnLists": [MockFunction],
            "IncludeForTrainingMode": [MockFunction],
            "IsChildPosition": [MockFunction],
            "RootPaths": [MockFunction],
            "SideToMove": [MockFunction],
            "Unlink": [MockFunction],
            "VisitChildren": [MockFunction],
            "children": Array [],
            "comment": "",
            "easinessFactor": 0,
            "fen": "",
            "forSide": 0,
            "intervalIndex": 0,
            "myTurn": false,
            "nextRepetitionTimestamp": 0,
            "parents": Array [],
            "previousIntervalDays": 0,
            "trainingHistory": Array [],
          },
        },
        "tag": RepertoireTag {
          "AddChild": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveChild": [MockFunction],
          "children": Array [],
          "fen": "",
          "forSide": 0,
          "id": "",
          "name": "name",
          "position": RepertoirePosition {
            "AddChild": [MockFunction],
            "AddTrainingEvent": [MockFunction],
            "AsPgn": [MockFunction],
            "AsPgnMoveText": [MockFunction],
            "AsSaved": [MockFunction],
            "GetTurnLists": [MockFunction],
            "IncludeForTrainingMode": [MockFunction],
            "IsChildPosition": [MockFunction],
            "RootPaths": [MockFunction],
            "SideToMove": [MockFunction],
            "Unlink": [MockFunction],
            "VisitChildren": [MockFunction],
            "children": Array [],
            "comment": "",
            "easinessFactor": 0,
            "fen": "",
            "forSide": 0,
            "intervalIndex": 0,
            "myTurn": false,
            "nextRepetitionTimestamp": 0,
            "parents": Array [],
            "previousIntervalDays": 0,
            "trainingHistory": Array [],
          },
        },
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`EditViewModel onBoardMove should add a repertoire position with the new move 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "blackRepertoire": Repertoire {
          "AddFromGame": [MockFunction],
          "AddMove": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveMove": [MockFunction],
          "RemoveRepertoireTag": [MockFunction],
          "positions": Array [],
          "tags": Array [],
        },
        "whiteRepertoire": Repertoire {
          "AddFromGame": [MockFunction],
          "AddMove": [MockFunction],
          "AsSaved": [MockFunction],
          "RemoveMove": [MockFunction],
          "RemoveRepertoireTag": [MockFunction],
          "positions": Array [],
          "tags": Array [
            RepertoireTag {
              "AddChild": [MockFunction],
              "AsSaved": [MockFunction],
              "RemoveChild": [MockFunction],
              "children": Array [],
              "fen": "",
              "forSide": 0,
              "id": "",
              "name": "",
              "position": RepertoirePosition {
                "AddChild": [MockFunction],
                "AddTrainingEvent": [MockFunction],
                "AsPgn": [MockFunction],
                "AsPgnMoveText": [MockFunction],
                "AsSaved": [MockFunction],
                "GetTurnLists": [MockFunction],
                "IncludeForTrainingMode": [MockFunction],
                "IsChildPosition": [MockFunction],
                "RootPaths": [MockFunction],
                "SideToMove": [MockFunction],
                "Unlink": [MockFunction],
                "VisitChildren": [MockFunction],
                "children": Array [],
                "comment": "",
                "easinessFactor": 0,
                "fen": "",
                "forSide": 0,
                "intervalIndex": 0,
                "myTurn": false,
                "nextRepetitionTimestamp": 0,
                "parents": Array [],
                "previousIntervalDays": 0,
                "trainingHistory": Array [],
              },
            },
          ],
        },
      },
      Object {
        "newMove": Move {
          "position": RepertoirePosition {
            "AddChild": [MockFunction],
            "AddTrainingEvent": [MockFunction],
            "AsPgn": [MockFunction],
            "AsPgnMoveText": [MockFunction],
            "AsSaved": [MockFunction],
            "GetTurnLists": [MockFunction],
            "IncludeForTrainingMode": [MockFunction],
            "IsChildPosition": [MockFunction],
            "RootPaths": [MockFunction],
            "SideToMove": [MockFunction],
            "Unlink": [MockFunction],
            "VisitChildren": [MockFunction],
            "children": Array [],
            "comment": "",
            "easinessFactor": 0,
            "fen": "new move fen",
            "forSide": 0,
            "intervalIndex": 0,
            "myTurn": false,
            "nextRepetitionTimestamp": 0,
            "parents": Array [],
            "previousIntervalDays": 0,
            "trainingHistory": Array [],
          },
          "san": "e5",
        },
        "parent": RepertoirePosition {
          "AddChild": [MockFunction],
          "AddTrainingEvent": [MockFunction],
          "AsPgn": [MockFunction],
          "AsPgnMoveText": [MockFunction],
          "AsSaved": [MockFunction],
          "GetTurnLists": [MockFunction],
          "IncludeForTrainingMode": [MockFunction],
          "IsChildPosition": [MockFunction],
          "RootPaths": [MockFunction],
          "SideToMove": [MockFunction],
          "Unlink": [MockFunction],
          "VisitChildren": [MockFunction],
          "children": Array [],
          "comment": "",
          "easinessFactor": 0,
          "fen": "",
          "forSide": 0,
          "intervalIndex": 0,
          "myTurn": false,
          "nextRepetitionTimestamp": 0,
          "parents": Array [],
          "previousIntervalDays": 0,
          "trainingHistory": Array [],
        },
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
